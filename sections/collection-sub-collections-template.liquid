{% if section.settings.featured_collection_image %}
  {%- assign feature_image = true -%}

  {% if collection.image %}
    {%- assign collection_image = collection.image -%}
  {% elsif section.settings.image != blank %}
    {%- assign collection_image = section.settings.image -%}
  {% else %}
    {%- assign collection_image = collection.products.first.featured_image -%}
  {% endif %}

  {%- assign text_position = section.settings.text_position | split: ' ' -%}

  {% capture banner_text %}
    <div class="container banner__text text-align--{{ text_position[0] }}">
      <div class="banner__inner-text">
        {% if section.settings.display_collection_header_title %}
          <h1 class="headline">{{ collection.title }}</h1>
        {% endif %}
      </div>
    </div>
  {% endcapture %}

  <div id="banner-{{ section.id }}" class="featured-image--{{ feature_image }} darken-image-{{ section.settings.darken_image }} mobile-parallax-enabled--{{ settings.enable_mobile_parallax }} mobile-image-crop-enabled--{{ settings.slideshow_images_crop }}">
    {% if section.settings.parallax_effect %}
      <div class="parallax__wrap horizontal-text-position--{{ text_position[0] }} vertical-text-position--{{ text_position[1] }}">
        {{ banner_text }}

        <div class="parallax" data-parallax-image="{{ collection_image | img_url: '2048x' }}">
          <noscript>
            <img src="{{ collection_image | img_url: '2000x' }}" alt="{{ alt | escape }}" class="image__fallback">
          </noscript>
        </div>

        <img alt class="mobile-placeholder-svg" src="data:image/svg+xml;utf8,<svg%20xmlns='http://www.w3.org/2000/svg'%20width='{{ collection_image.width }}'%20height='{{ collection_image.height }}'></svg>"/>
      </div>
    {% else %}
      <div class="banner__wrap">
        <div class="banner horizontal-text-position--{{ text_position[0] }} vertical-text-position--{{ text_position[1] }}">
          {{ banner_text }}
        </div>

        {% if collection_image != blank %}
          <div class="banner__image-wrapper">
            {% render 'image-element',
                    image: collection_image,
                    alt: collection_image.alt,
                    stretch_width: true
            %}
          </div>
        {% else %}
          <img src="{{ 'placeholder.svg' | asset_url }}"/>
        {% endif %}
      </div>
    {% endif %}
  </div>
{% endif %}

<section class="section">
  <div class="container {% if section.settings.featured_collection_image == false %}content{% endif %} main-wrapper">
    {% paginate collection.products by section.settings.pagination_limit %}

    {% if section.settings.display_collection_header_title and section.settings.featured_collection_image == blank %}
      <div class="one-whole column">
        <h1 class="center">{{ collection.title }}</h1>
        <div class="feature_divider"></div>
      </div>
    {% endif %}

    {% if section.settings.collection_breadcrumb %}
      <div class="one-half column medium-down--one-whole breadcrumb--text">
        <a href="{{ shop.url }}" title="{{ shop.name | escape }}">{{ 'general.breadcrumbs.home' | t }}</a>

        &nbsp;<span class="icon-arrow-right"></span>

        <a href="{{ collection.url }}" title="{{ collection.title | escape }}">{{ collection.title }}</a>

        {% if current_tags %}
          {% for tag in current_tags %}
            &nbsp;<span class="icon-arrow-right"></span>
            <a href="{{ routes.collections_url }}/{% if collection.handle != blank %}{{ collection.handle }}{% else %}all{% endif %}/{{ tag | handleize }}" title="{{ tag | escape }}">{{ tag }}</a>
          {% endfor %}
        {% endif %}

        {% if paginate.pages != 0 %}
          &nbsp;<span class="icon-arrow-right"></span> {{ 'general.breadcrumbs.page' | t: current_page: paginate.current_page, pages: paginate.pages }}
        {% endif %}
      </div>
    {% endif %}

    {% if collection.handle != blank and collection.products_count > 0 %}
      <div class="one-half column medium-down--one-whole {% if section.settings.collection_breadcrumb == false %}offset-by-eight is-hidden-offset-mobile-only{% endif %}">
        <div class="collection-filters {% if collection.handle != 'vendors' %}tag-filter-{{ section.settings.collection_tags }} collection-filter-{{ section.settings.collection_sort }}{% endif %}">
          {% if section.settings.collection_tags and collection.handle != 'vendors' %}
            <div class="filter-wrap">
              {% for tag in collection.all_tags %}
                {% if forloop.first %}
                  <label for="tag_filter" class="inline">{{ 'collections.sorting.filter' | t }}: </label>
                  <select name="tag_filter" id="tag_filter">
                  <option {% unless current_tags %}selected="selected"{% endunless %} value="{% if collection.handle == "all" %}{{ routes.all_products_collection_url }}{% else %}{{ collection.url }}{% endif %}">{{ 'collections.general.all_collection_title' | t: title: collection.title }}</option>
                {% endif %}

                {% unless tag contains 'meta-' %}
                  <option {% if current_tags contains tag %}selected="selected"{% endif %} value="{{ routes.collections_url }}/{% if collection.handle != blank %}{{ collection.handle }}{% else %}all{% endif %}/{{ tag | handleize }}">{{ tag }}</option>
                {% endunless %}

                {% if forloop.last %}
                  </select>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}

          {% if section.settings.collection_sort %}
            <div class="filter-wrap">
              <label for="sort-by" class="inline">{{ 'collections.sorting.title' | t }}: </label>
              <select id="sort-by" data-default-sort="{{ collection.sort_by | default: collection.default_sort_by }}">
                <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
                <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
                <option value="title-ascending">{{ 'collections.sorting.az' | t }}</option>
                <option value="title-descending">{{ 'collections.sorting.za' | t }}</option>
                <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
                <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
                <option value="created-descending">{{ 'collections.sorting.date_descending' | t }}</option>
                <option value="created-ascending">{{ 'collections.sorting.date_ascending' | t }}</option>
              </select>
            </div>
          {% endif %}
        </div>
      </div>
    {% endif %}

    {% if collection.description != blank %}
      <div class="one-whole column">
        <div class="collection_description">
          {{ collection.description }}
        </div>
      </div>
    {% endif %}

    {% comment %} Check to see if sidebar should be enabled {% endcomment %}
    {% if section.blocks.size > 0 %}
      {%- assign sidebar = true -%}
    {% else %}
      {%- assign sidebar = false -%}
    {% endif %}

    <div class="content-wrapper is-flex is-flex-wrap">
      {% render 'sidebar' %}

      <div class="has-sidebar-option sidebar-enabled--{{ sidebar }}">
        <div class="container featured_collections">
          {%- assign linklist = linklists[collection.handle] -%}

          {% if linklist != empty %}
            {%- assign collections_per_row = section.settings.collections_per_row -%}

            {% render 'collection-loop',
                    linklist: linklist,
                    collections_per_row: collections_per_row,
                    sidebar: sidebar
            %}
          {% endif %}
        </div>

        <div class="container">
          {% if collection.products.size > 0 %}
            {%- assign object = section -%}
            {%- assign products = collection.products -%}
            {%- assign products_per_row = section.settings.products_per_row -%}

            {% render 'product-loop',
                    limit: section.settings.pagination_limit,
                    object: object,
                    products: products,
                    products_per_row: products_per_row,
                    sidebar: sidebar
            %}
          {% endif %}

          {% render 'pagination',
                  sidebar: sidebar,
                  paginate: paginate
          %}
        </div>
      </div>
    </div>
  {% endpaginate %}
  </div>
</section>

<style>
  {% if section.settings.parallax_effect %}
    #banner-{{ section.id }} .parallax__wrap,
    #banner-{{ section.id }} .parallax__container .parallax {
      height: {{ section.settings.parallax_image_height }}px;
    }
  {% endif %}

  #banner-{{ section.id }} .parallax__container .parallax {
    background-position: {{ section.settings.image_focal_point}} !important;
  }

  #banner-{{ section.id }} .banner__wrap img {
    object-position: {{ section.settings.image_focal_point }};
    -o-object-position: {{ section.settings.image_focal_point }};
  }

  @media only screen and (max-width: 798px) {
    {% if settings.slideshow_images_crop or section.settings.parallax_effect and settings.enable_mobile_parallax %}
      #banner-{{ section.id }} .banner__wrap,
      #banner-{{ section.id }} .parallax__wrap,
      #banner-{{ section.id }} .parallax__container .parallax {
        height: {{ section.settings.parallax_image_height | divided_by: 2 }}px;
      }
    {% else %}
      #banner-{{ section.id }} .banner__wrap,
      #banner-{{ section.id }} .parallax__wrap {
        height: auto;
      }
    {% endif %}
  }

</style>

{% schema %}
  {
    "name": "Sub-collection",
    "class": "shopify-section--collection-template parallax-banner",
    "settings": [
      {
        "type": "checkbox",
        "id": "display_collection_header_title",
        "label": "Show collection title"
      },
      {
        "type": "checkbox",
        "id": "collection_breadcrumb",
        "label": "Show breadcrumb links",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "collection_sort",
        "label": "Show collection filter"
      },
      {
        "type": "checkbox",
        "id": "collection_tags",
        "label": "Show tag filter"
      },
      {
        "type": "header",
        "content": "Collections"
      },
      {
        "type": "range",
        "id": "collections_per_row",
        "label": "Collections per row",
        "min": 2,
        "max": 4,
        "step": 1,
        "default": 3
      },
      {
        "type": "header",
        "content": "Products"
      },
      {
        "type": "range",
        "id": "products_per_row",
        "label": "Products per row",
        "min": 2,
        "max": 4,
        "step": 1,
        "default": 3
      },
      {
        "type": "range",
        "id": "pagination_limit",
        "label": "Products per page",
        "min": 2,
        "max": 50,
        "step": 1,
        "default": 48
      },
      {
        "type": "header",
        "content": "Banner image"
      },
      {
        "type": "checkbox",
        "id": "featured_collection_image",
        "label": "Show featured collection image",
        "info": "The collection's featured image will be used as a banner image. Optionally upload a banner image as a fallback."
      },
      {
        "type": "image_picker",
        "id": "image",
        "label": "Banner image",
        "info": "1600 x 1000px recommended"
      },
      {
        "type": "select",
        "id": "image_focal_point",
        "label": "Image focal point",
        "info": "Used to keep the subject of your photo in view. On mobile, only applies to cropped images.",
        "default": "center center",
        "options": [
          {
            "value": "20% 0",
            "label": "Top left"
          },
          {
            "value": "top center",
            "label": "Top center"
          },
          {
            "value": "80% 0",
            "label": "Top right"
          },
          {
            "value": "20% 50%",
            "label": "Left"
          },
          {
            "value": "center center",
            "label": "Center"
          },
          {
            "value": "80% 50%",
            "label": "Right"
          },
          {
            "value": "20% 100%",
            "label": "Bottom left"
          },
          {
            "value": "bottom center",
            "label": "Bottom center"
          },
          {
            "value": "80% 100%",
            "label": "Bottom right"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "darken_image",
        "label": "Darken banner image",
        "default": false
      },
      {
        "type": "select",
        "id": "text_position",
        "label": "Text position",
        "default": "center center",
        "options": [
          {
            "value": "left top",
            "label": "Top left"
          },
          {
            "value": "center top",
            "label": "Top center"
          },
          {
            "value": "right top",
            "label": "Top right"
          },
          {
            "value": "left center",
            "label": "Left"
          },
          {
            "value": "center center",
            "label": "Center"
          },
          {
            "value": "right center",
            "label": "Right"
          },
          {
            "value": "left bottom",
            "label": "Bottom left"
          },
          {
            "value": "center bottom",
            "label": "Bottom center"
          },
          {
            "value": "right bottom",
            "label": "Bottom right"
          }
        ]
      },
      {
        "type": "header",
        "content": "Parallax"
      },
      {
        "type": "checkbox",
        "id": "parallax_effect",
        "label": "Enable parallax scrolling",
        "default": true
      },
      {
        "type": "range",
        "id": "parallax_image_height",
        "label": "Parallax section height",
        "min": 300,
        "max": 1000,
        "step": 20,
        "default": 400,
        "unit": "px"
      },
      {
        "type": "header",
        "content": "Sidebar"
      },
      {
        "type": "paragraph",
        "content": "Create a sidebar by adding content blocks."
      },
      {
        "type": "checkbox",
        "id": "toggle",
        "label": "Toggle sidebar content",
        "default": false
      }
    ],
    "blocks": [
      {
        "type": "filter_by_collection",
        "name": "Collection list",
        "limit": 1
      },
      {
        "type": "menu",
        "name": "Menu",
        "settings": [
          {
            "type": "link_list",
            "id": "custom_menu_linklist",
            "label": "Menu"
          }
        ]
      },
      {
        "type": "page",
        "name": "Page",
        "settings": [
          {
            "type": "page",
            "id": "content_page",
            "label": "Page"
          }
        ]
      },
      {
        "type": "filter_by_tag",
        "name": "Tag list",
        "limit": 1
      },
       {
        "type": "text",
        "name": "Text",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Heading",
            "default": "Heading"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text",
            "default": "<p>Text area can be used for special announcements or general information.</p>"
          }
        ]
      },
      {
        "type": "filter_by_type",
        "name": "Type list",
        "limit": 1
      },
      {
        "type": "filter_by_vendor",
        "name": "Vendor list",
        "limit": 1
      }
    ]
  }
{% endschema %}
